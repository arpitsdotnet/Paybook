@model Paybook.ServiceLayer.Models.ViewModels.InvoicePayViewModel

@{
    Html.EnableClientValidation(false);
    Layout = "";
}


<div id="diVInvoicePaymentForm">
    @using (Ajax.BeginForm("Create", "InvoicePay", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "diVInvoicePaymentForm" }))
    {
        @Html.AntiForgeryToken()

        <div class="row bg-default">
            <div class="col-lg-12 text-right">
                <div class="btn-group p-2">
                    <button type="submit" class="btn btn-primary btn-sm"><i class="glyphicon glyphicon-ok-circle"></i>&nbsp; SAVE</button>
                </div>
            </div>
        </div>

        <div class="form-horizontal">

            @if (Model.InvoicePay != null)
            {
                if (Model.InvoicePay.IsSucceeded == true)
                {
                    <div class="alert alert-success">@Model.InvoicePay.ReturnMessage</div>

                    <script>
                        $(document).ready(function () {
                            $("#myModal").modal('hide');
                        })
                    </script>
                }
                else if (!string.IsNullOrWhiteSpace(Model.InvoicePay.ReturnMessage))
                {
                    <div class="alert alert-danger">@Model.InvoicePay.ReturnMessage</div>
                }
            }

            @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

            @Html.HiddenFor(model => model.InvoicePay.InvoiceId)


            <div class="form-group">
                @Html.LabelFor(model => model.ClientName, htmlAttributes: new { @class = "control-label text-left col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.ClientName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Balance, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Balance, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.InvoiceNumber, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.InvoiceNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.InvoiceTotal, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.InvoiceTotal, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </div>
            </div>

            <div class="container-fluid row pt-3">
                <div class="col-xs-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.InvoicePay.PayDate, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.InvoicePay.PayDate, new { htmlAttributes = new { id = "txtInvoicePayDate", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.InvoicePay.PayDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-xs-6">
                    <div class="form-group text-right">
                        @Html.LabelFor(model => model.InvoicePay.PayAmount, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.TextBoxFor(model => model.InvoicePay.PayAmount, htmlAttributes: new { id = "txtServiceSubtotal", @class = "form-control text-right" })
                            @Html.ValidationMessageFor(model => model.InvoicePay.PayAmount, "", new { @class = "text-danger disabled" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<script src="~/Scripts/jquery.validation.date.js"></script>
<script>
    $(document).ready(function () {
        $("#txtInvoicePayDate, .input-group.date").datepicker({
            format: "mm/dd/yyyy", startDate: "new Date()", todayBtn: "linked", orientation: "auto top", autoclose: true, todayHighlight: true
        }).datepicker('setDate', 'new Date()');

    })
</script>