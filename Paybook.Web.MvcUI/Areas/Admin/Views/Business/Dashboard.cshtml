@model Paybook.ServiceLayer.Models.ViewModels.DashboardViewModel
@using Paybook.ServiceLayer.Constants;

@{
    ViewBag.Title = "Dashboard";
}

<div class="row bg-default container-fluid">
    <div class="col-lg-3">
        @{
            var companyLogo = "CompanyIco.png";
            if (!string.IsNullOrEmpty(Model.Business.Image))
            {
                companyLogo = Model.Business.Image;
            }
        }
        <h3 class="bold"><img src="~/_Documents/Logo/@companyLogo" alt="Business Logo" height="30" /> &nbsp; @Model.Business.Name</h3>
    </div>
</div>


<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "alert alert-danger list-unstyled" })
</div>

<div class="row">
    <div class="col-lg-9 col-md-12">
        <div class="container-fluid">
            <div class="row mt-5" style="color: #1b76be">
                @Html.Partial("_DashboardCounterWidgetPartial", Model.CounterInvoicesOpen)
                @Html.Partial("_DashboardCounterWidgetPartial", Model.CounterInvoicesOverdue)
                @Html.Partial("_DashboardCounterWidgetPartial", Model.CounterPaymentPaidPartial)
                @Html.Partial("_DashboardCounterWidgetPartial", Model.CounterPaymentTotal)
            </div>
        </div>
        <div class="row">
            <div class="col-lg-4 col-md-12 pt-5">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        Invoice count vs deposit count of last 7 days
                    </div>
                    <div class="panel-body">
                        <div id="idInvoicePaymentCount_Chart"></div>
                    </div>
                </div>
            </div>
            <div class="col-lg-8 col-md-12 pt-5">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        Invoice total vs deposit total of last 7 days
                    </div>
                    <div class="panel-body">
                        <div id="idIPaymentAgainstInvoice_Chart"></div>
                    </div>
                </div>
            </div>
        </div>
        @*<div class="row">
                <div class="col-lg-12 col-md-12 pt-5">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            Last 10 Payments
                        </div>
                        <div class="panel-body">
                            <div id="idPaymentsLast10_Chart"></div>
                        </div>
                    </div>
                </div>
            </div>*@
        <div class="row">
            <div class="col-lg-6 col-md-12 pt-5">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        Latest 5 invoices
                    </div>
                    <div class="panel-body">
                        <div id="divLast5Invoices"></div>
                    </div>
                </div>
            </div>
            <div class="col-lg-6 col-md-12 pt-5">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        Latest 5 deposits
                    </div>
                    <div class="panel-body">
                        <div id="divLast5Payments"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-3 col-md-12">
        <div class="container-fluid mt-5">
            <div id="idLatestCustomer" class="Dashboard_CustomerCount">
                <div>
                    <div class="col-sm-6">
                        <div>Clients&nbsp;<span class="tiny">(Last 7 days)</span></div>
                        <div class="text-left h4">
                            @Model.ClientCounter.Count
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div id="idCustomer_Chart"></div>
                    </div>
                    <div class="clearfix"></div>
                </div>
            </div>
            <div class="fwt-light-grey">
                <div class="panel panel-default mt-5">
                    <div class="panel-heading text-center text-info">
                        Need Attention
                    </div>
                    <div class="panel-body">
                        <div id="divActivitiesList"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script>
        $(document).ready(function () {
            var username = "@User.Identity.Name";

            var jsonVar = "?username=" + username;

            CallAjaxMethod("/Chief/Business/GetCountOfInvoicesAndPaymentsByLastWeek", jsonVar, function (data) {
                try {
                    var $Data = data.data;
                    console.log($Data);
                    if ($Data.length > 0) {
                        if ($Data[0].ERROR != null && $Data[0].ERROR != "") {
                            alert($Data[0].ERROR);
                        }
                        else {
                            console.log("Google chart started");
                            google.charts.load("current", { packages: ["corechart"] });
                            google.charts.setOnLoadCallback(drawChart);
                            console.log("Google chart ended");

                            function drawChart() {
                                var sData = new Array($Data.length + 1);
                                sData[0] = ["Entity", "Count"];
                                for (var i = 0; i < $Data.length; i++) {
                                    sData[i + 1] = [$Data[i].Entity, parseInt($Data[i].Count)];
                                }
                                console.log(sData);
                                var chartdata = new google.visualization.arrayToDataTable(sData);
                                var options = {
                                    backgroundColor: 'fwt-grey',
                                    title: '',
                                    pieHole: 0.4,
                                    height: 300,
                                    animation: {
                                        duration: 1000,
                                        easing: 'out',
                                    },
                                };
                                var chart = new google.visualization.PieChart(document.getElementById('idInvoicePaymentCount_Chart'));
                                chart.draw(chartdata, options);
                            }
                        }
                    }
                }
                catch (err) {
                    $("#idInvoicePaymentCount_Chart").html("<div class='alert alert-danger'>Error occured due to " + err + "</div>");
                }
            });

            CallAjaxMethod("/Chief/Business/GetInvoiceAmountsAndPaymentsByLastWeek", jsonVar, function (data) {
                try {

                    var $Data = data.data;
                    console.log($Data);
                    if ($Data.length > 0) {
                        if ($Data[0].ERROR != null && $Data[0].ERROR != "") {
                            alert("Error occured: " + $Data[0].ERROR);
                        }
                        else {
                            console.log("Dashboard_GetInvoiceAmountsAndPaymentsByLastWeek_Callback >> " + $Data);
                            google.charts.load('current', { 'packages': ['corechart'] });
                            google.charts.setOnLoadCallback(drawChart);
                            function drawChart() {
                                var sData = new Array($Data.length + 1);

                                sData[0] = ["Date", "Invoice", "Deposit"];
                                for (var i = 0; i < $Data.length; i++) {
                                    var sDate = new Date($Data[i].Date);
                                    sData[i + 1] = [$Data[i].Date, parseInt($Data[i].InvoiceAmount), parseInt($Data[i].PaymentAmount)];
                                }
                                console.log(">>>" + sData);
                                var chartdata = new google.visualization.arrayToDataTable(sData);
                                var options = {
                                    backgroundColor: 'fwt-grey',
                                    title: '',
                                    vAxis: { format: '₹##,##,###.##', title: 'Amount' },
                                    height: 300,
                                    colors: ['#1b9e77', '#7570b3'],
                                    legend: { position: 'top' },
                                    animation: {
                                        duration: 1000,
                                        easing: 'out',
                                    },
                                };
                                var chart = new google.visualization.LineChart(document.getElementById('idIPaymentAgainstInvoice_Chart'));
                                chart.draw(chartdata, options);
                            }
                        }
                    }
                }
                catch (err) {
                    $("#idIPaymentAgainstInvoice_Chart").html("<div class='alert alert-danger'>Error occured due to " + err + "</div>");
                }
            });

            //CallAjaxMethod("/Chief/Business/GetPaymentsLast10", jsonVar, function (data) {
            //    try {

            //        var $Data = data.data;
            //        console.log($Data);
            //        if ($Data.length > 0) {
            //            console.log("Dashboard_GetPaymentsLast20_Callback >> " + $Data);
            //            google.charts.load('current', { 'packages': ['corechart'] });
            //            google.charts.setOnLoadCallback(drawChart);
            //            function drawChart() {
            //                var sData = new Array($Data.length + 1);

            //                sData[0] = ["Date", "PaymentAmount"];
            //                for (var i = 0; i < $Data.length; i++) {
            //                    //$Data[i].InvoiceAmount == "" ? 0 : $Data[i].InvoiceAmount;
            //                    //$Data[i].PaymentAmount == "" ? 0 : $Data[i].PaymentAmount;
            //                    sData[i + 1] = [$Data[i].Date, parseInt($Data[i].PaymentAmount)];
            //                }
            //                console.log(">>>" + sData);
            //                var chartdata = new google.visualization.arrayToDataTable(sData);
            //                var options = {
            //                    backgroundColor: 'fwt-grey',
            //                    title: '',
            //                    vAxis: { format: '₹##,##,###.##', title: 'Payments' },
            //                    height: 300,
            //                    colors: ['#7570b3'],
            //                    legend: { position: 'top' },
            //                    animation: {
            //                        duration: 1000,
            //                        easing: 'out',
            //                    },
            //                };
            //                var chart = new google.visualization.ColumnChart(document.getElementById('idPaymentsLast10_Chart'));
            //                chart.draw(chartdata, options);

            //            }
            //        }
            //        else {
            //            $("#idPaymentsLast10_Chart").css({ height: "300px;" }).html("<div class='alert alert-info'>We did not find any payment for you to work, you can <a class='alert-link' href='/Chief/Payment/Create'>create a payment</a> here.</div>");
            //        }
            //    }
            //    catch (err) {
            //        alert("Error occured: " + err);
            //    }
            //});

            CallAjaxMethod("/Chief/Business/GetClientCountByLastWeek", jsonVar, function (data) {
                try {

                    var $Data = data.data;
                    console.log($Data);
                    if ($Data.length > 0) {
                        if ($Data[0].ERROR != null && $Data[0].ERROR != "") {
                            alert("Error occured: " + $Data[0].ERROR);
                        }
                        else {
                            console.log("Dashboard_GetClientCountByLastWeek_Callback >> " + $Data);
                            google.charts.load('current', { 'packages': ['corechart', 'bar'] });
                            google.charts.setOnLoadCallback(drawChart);
                            function drawChart() {
                                var sData = new Array($Data.length + 1);
                                sData[0] = ["Last 7 Days", "Count"];
                                for (var i = 0; i < $Data.length; i++) {
                                    $Data[i].Date == "" ? 0 : $Data[i].Date;
                                    $Data[i].Count == "" ? 0 : $Data[i].Count;
                                    sData[i + 1] = [$Data[i].Date, parseInt($Data[i].Count)];
                                }
                                console.log(">>>" + sData);
                                var chartdata = new google.visualization.arrayToDataTable(sData);
                                var options = {
                                    // vAxis: { format: 'long', title: 'Number Of Payments / Invoices' },
                                    height: 35,
                                    colors: ['#fff'],
                                    legend: { position: 'none' },
                                    bar: { groupWidth: "25%" },
                                    backgroundColor: 'transparent',
                                    vAxis: {
                                        gridlines: {
                                            color: 'transparent'
                                        }
                                    },
                                    animation: {
                                        duration: 1000,
                                        easing: 'out',
                                    },
                                };

                                var chart = new google.visualization.ColumnChart(document.getElementById('idCustomer_Chart'));
                                chart.draw(chartdata, options);
                            }
                        }
                    }
                }
                catch (err) {
                    $("#idCustomer_Chart").html("<div class='alert alert-danger'>Error occured due to " + err+"</div>");
                }
            });

            GetLast5Invoices(username);
            GetLast5Payments(username);

            GetAllActivities(username);
        });

        function GetLast5Invoices(username) {
            $.ajax({
                type: "GET",
                url: "/Chief/Business/GetLast5Invoices",
                contentType: "application/json; chatset=utf-8",
                data: { "username": username },
                cache: false,
                dataType: "html",
                success: function (data) {
                    //console.log(data);
                    $("#divLast5Invoices").html(data);
                },
                error: function (jqXHR, textStatus, errorThrown) {

                    console.log("Dynamic content failed to load. >>jqXHR>" + jqXHR.responseText + " >>textStatus> " + textStatus + " >>errorThrown> " + errorThrown);
                }
            });
        }
        function GetLast5Payments(username) {
            $.ajax({
                type: "GET",
                url: "/Chief/Business/GetLast5Payments",
                contentType: "application/json; chatset=utf-8",
                data: { "username": username },
                cache: false,
                dataType: "html",
                success: function (data) {
                    //console.log(data);
                    $("#divLast5Payments").html(data);
                },
                error: function (jqXHR, textStatus, errorThrown) {

                    console.log("Dynamic content failed to load. >>jqXHR>" + jqXHR.responseText + " >>textStatus> " + textStatus + " >>errorThrown> " + errorThrown);
                }
            });
        }

        function GetAllActivities(username) {
            $.ajax({
                type: "GET",
                url: "/Chief/Business/GetAllActivities",
                contentType: "application/json; chatset=utf-8",
                data: { "username": username },
                cache: false,
                dataType: "html",
                success: function (data) {
                    //console.log(data);
                    $("#divActivitiesList").html(data);
                },
                error: function (jqXHR, textStatus, errorThrown) {

                    console.log("Dynamic content failed to load. >>jqXHR>" + jqXHR.responseText + " >>textStatus> " + textStatus + " >>errorThrown> " + errorThrown);
                }
            });
        }
    </script>
}
