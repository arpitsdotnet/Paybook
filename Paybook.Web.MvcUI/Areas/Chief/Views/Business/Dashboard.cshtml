@model Paybook.Web.MvcUI.Models.ViewModels.DashboardViewModel
@using Paybook.ServiceLayer.Constants;

@{
    ViewBag.Title = "Dashboard";
}

<div class="row bg-default container-fluid">
    <div class="col-lg-3">
        <h3 class="bold"><i class="glyphicon glyphicon-dashboard"></i>&nbsp; DASHBOARD</h3>
    </div>
</div>


<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "alert alert-danger list-unstyled" })
</div>

<div class="row">
    <div class="col-lg-9 col-md-12">
        <div class="container-fluid">
            <div class="row mt-5" style="color: #1b76be">
                @Html.Partial("_DashboardCounterWidgetPartial", Model.CounterInvoicesOpen)
                @Html.Partial("_DashboardCounterWidgetPartial", Model.CounterInvoicesOpenLastWeek)
                @Html.Partial("_DashboardCounterWidgetPartial", Model.CounterInvoicesOverdue)
                @Html.Partial("_DashboardCounterWidgetPartial", Model.CounterPaymentPaidPartial)
                @Html.Partial("_DashboardCounterWidgetPartial", Model.CounterPaymentPaidLastMonth)
                @Html.Partial("_DashboardCounterWidgetPartial", Model.CounterPaymentTotal)
            </div>
        </div>
        <div class="row">
            <div class="col-lg-5 col-md-12 pt-5">
                <div class="fwt-container-small bg-secondary fwt-round">
                    <h4 class="fwt-bold fwt-text-deep-orange">Summary of last 7 days</h4>
                    <div id="idInvoicePaymentCount_Chart"></div>
                </div>
            </div>
            <div class="col-lg-7 col-md-12 pt-5">
                <div class="fwt-container-small bg-secondary fwt-round">
                    <h4 class="fwt-bold fwt-text-deep-orange">Invoice Amount / Payments of last 7 days</h4>
                    <div id="idIPaymentAgainstInvoice_Chart"></div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12 col-md-12 pt-5">
                <div class="fwt-container-small bg-secondary fwt-round">
                    <h4 class="fwt-bold fwt-text-deep-orange">Last 10 Payments of all times</h4>
                    <div id="idPaymentsLast10_Chart"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-3 col-md-12">
        <div class="container-fluid mt-5">
            <div id="idLatestCustomer" class="Dashboard_CustomerCount">
                <div>
                    <div class="col-sm-6">
                        <div>Clients&nbsp;<span class="tiny">(Last 7 days)</span></div>
                        <div class="text-left h4">
                            @Model.ClientCounter.Count
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div id="idCustomer_Chart"></div>
                    </div>
                    <div class="clearfix"></div>
                </div>
            </div>
            <div class="fwt-light-grey">
                <h3 class="text-center text-success pt-2">Need Attention</h3>
                <div id="idActivitiesList" runat="server" class="activity-timeline">
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script>
        $(document).ready(function () {
            var jsonVar = "?username=@User.Identity.Name";

            CallAjaxMethod("Business/GetCountOfInvoicesAndPaymentsByLastWeek", jsonVar, function (data) {
                try {
                    var $Data = data.data;
                    console.log($Data);
                    if ($Data.length > 0) {
                        if ($Data[0].ERROR != null && $Data[0].ERROR != "") {
                            alert($Data[0].ERROR);
                        }
                        else {
                            console.log("Google chart started");
                            google.charts.load("current", { packages: ["corechart"] });
                            google.charts.setOnLoadCallback(drawChart);
                            console.log("Google chart ended");

                            function drawChart() {
                                var sData = new Array($Data.length + 1);
                                sData[0] = ["Entity", "Count"];
                                for (var i = 0; i < $Data.length; i++) {
                                    sData[i + 1] = [$Data[i].Entity, parseInt($Data[i].Count)];
                                }
                                console.log(sData);
                                var chartdata = new google.visualization.arrayToDataTable(sData);
                                var options = {
                                    backgroundColor: 'fwt-grey',
                                    title: '',
                                    pieHole: 0.4,
                                    height: 300,
                                };
                                var chart = new google.visualization.PieChart(document.getElementById('idInvoicePaymentCount_Chart'));
                                chart.draw(chartdata, options);
                            }
                        }
                    }
                }
                catch (err) {
                    alert("Error occured: " + err);
                }
            });

            CallAjaxMethod("Business/GetInvoiceAmountsAndPaymentsByLastWeek", jsonVar, function (data) {
                try {

                    var $Data = data.data;
                    console.log($Data);
                    if ($Data.length > 0) {
                        if ($Data[0].ERROR != null && $Data[0].ERROR != "") {
                            alert("Error occured: " + $Data[0].ERROR);
                        }
                        else {
                            console.log("Dashboard_GetInvoiceAmountsAndPaymentsByLastWeek_Callback >> " + $Data);
                            google.charts.load('current', { 'packages': ['corechart'] });
                            google.charts.setOnLoadCallback(drawChart);
                            function drawChart() {
                                var sData = new Array($Data.length + 1);

                                sData[0] = ["Date", "InvoiceAmount", "PaymentAmount"];
                                for (var i = 0; i < $Data.length; i++) {
                                    var sDate = new Date($Data[i].Date);
                                    sData[i + 1] = [$Data[i].Date, parseInt($Data[i].InvoiceAmount), parseInt($Data[i].PaymentAmount)];
                                }
                                console.log(">>>" + sData);
                                var chartdata = new google.visualization.arrayToDataTable(sData);
                                var options = {
                                    backgroundColor: 'fwt-grey',
                                    title: '',
                                    vAxis: { format: '₹##,##,###.##', title: 'Amount' },
                                    height: 300,
                                    colors: ['#1b9e77', '#7570b3'],
                                    legend: { position: 'top' },
                                };
                                var chart = new google.visualization.LineChart(document.getElementById('idIPaymentAgainstInvoice_Chart'));
                                chart.draw(chartdata, options);
                            }
                        }
                    }
                }
                catch (err) {
                    alert("Error occured: " + err);
                }
            });

            CallAjaxMethod("Business/GetPaymentsLast10", jsonVar, function (data) {
                try {

                    var $Data = data.data;
                    console.log($Data);
                    if ($Data.length > 0) {
                        if ($Data[0].ERROR != null && $Data[0].ERROR != "") {
                            alert("Error occured: " + $Data[0].ERROR);
                        }
                        else {
                            console.log("Dashboard_GetPaymentsLast20_Callback >> " + $Data);
                            google.charts.load('current', { 'packages': ['corechart'] });
                            google.charts.setOnLoadCallback(drawChart);
                            function drawChart() {
                                var sData = new Array($Data.length + 1);

                                sData[0] = ["Date", "PaymentAmount"];
                                for (var i = 0; i < $Data.length; i++) {
                                    //$Data[i].InvoiceAmount == "" ? 0 : $Data[i].InvoiceAmount;
                                    //$Data[i].PaymentAmount == "" ? 0 : $Data[i].PaymentAmount;
                                    sData[i + 1] = [$Data[i].Date, parseInt($Data[i].PaymentAmount)];
                                }
                                console.log(">>>" + sData);
                                var chartdata = new google.visualization.arrayToDataTable(sData);
                                var options = {
                                    backgroundColor: 'fwt-grey',
                                    title: '',
                                    vAxis: { format: '₹##,##,###.##', title: 'Payments' },
                                    height: 300,
                                    colors: ['#7570b3'],
                                    legend: { position: 'top' },
                                };
                                var chart = new google.visualization.ColumnChart(document.getElementById('idPaymentsLast10_Chart'));
                                chart.draw(chartdata, options);
                            }
                        }
                    }
                }
                catch (err) {
                    alert("Error occured: " + err);
                }
            });

            CallAjaxMethod("Business/GetClientCountByLastWeek", jsonVar, function (data) {
                try {

                    var $Data = data.data;
                    console.log($Data);
                    if ($Data.length > 0) {
                        if ($Data[0].ERROR != null && $Data[0].ERROR != "") {
                            alert("Error occured: " + $Data[0].ERROR);
                        }
                        else {
                            console.log("Dashboard_GetClientCountByLastWeek_Callback >> " + $Data);
                            google.charts.load('current', { 'packages': ['corechart', 'bar'] });
                            google.charts.setOnLoadCallback(drawChart);
                            function drawChart() {
                                var sData = new Array($Data.length + 1);
                                sData[0] = ["Last 7 Days", "Count"];
                                for (var i = 0; i < $Data.length; i++) {
                                    $Data[i].Date == "" ? 0 : $Data[i].Date;
                                    $Data[i].Count == "" ? 0 : $Data[i].Count;
                                    sData[i + 1] = [$Data[i].Date, parseInt($Data[i].Count)];
                                }
                                console.log(">>>" + sData);
                                var chartdata = new google.visualization.arrayToDataTable(sData);
                                var options = {
                                    // vAxis: { format: 'long', title: 'Number Of Payments / Invoices' },
                                    height: 35,
                                    colors: ['#fff'],
                                    legend: { position: 'none' },
                                    bar: { groupWidth: "25%" },
                                    backgroundColor: 'transparent',
                                    vAxis: {
                                        gridlines: {
                                            color: 'transparent'
                                        }
                                    },
                                };

                                var chart = new google.visualization.ColumnChart(document.getElementById('idCustomer_Chart'));
                                chart.draw(chartdata, options);
                            }
                        }
                    }
                }
                catch (err) {
                    alert("Error occured: " + err);
                }
            });
        });
    </script>
}
